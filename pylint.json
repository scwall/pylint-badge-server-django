{
    "previous": {
        "module": 1,
        "nb_duplicated_lines": 0,
        "badname_method": 0,
        "badname_class_attribute": 0,
        "badname_variable": 0,
        "error": 0,
        "convention": 10,
        "percent_duplicated_lines": 0.0,
        "by_module": {
            "pylint.pylint_generator": {
                "warning": 2,
                "info": 0,
                "fatal": 0,
                "statement": 0,
                "refactor": 4,
                "convention": 10,
                "error": 0
            }
        },
        "info": 0,
        "method": 8,
        "badname_class": 0,
        "undocumented_class": 1,
        "undocumented_function": 0,
        "cycles": [],
        "badname_module": 0,
        "fatal": 0,
        "by_msg": {
            "invalid-name": 1,
            "unused-import": 2,
            "inconsistent-return-statements": 1,
            "chained-comparison": 3,
            "missing-docstring": 9
        },
        "badname_function": 0,
        "undocumented_method": 7,
        "badname_inlinevar": 0,
        "global_note": 7.090909090909091,
        "dependencies": {},
        "warning": 2,
        "function": 0,
        "badname_argument": 0,
        "statement": 55,
        "refactor": 4,
        "class": 1,
        "badname_const": 0,
        "badname_attr": 1,
        "undocumented_module": 1
    },
    "stats": {
        "nb_duplicated_lines": 0,
        "badname_method": 0,
        "info": 0,
        "badname_variable": 0,
        "undocumented_method": 7,
        "module": 1,
        "percent_duplicated_lines": 0.0,
        "by_module": {
            "pylint.pylint_generator": {
                "warning": 2,
                "info": 0,
                "statement": 0,
                "fatal": 0,
                "refactor": 4,
                "convention": 10,
                "error": 0
            }
        },
        "badname_class_attribute": 0,
        "method": 8,
        "badname_class": 0,
        "undocumented_class": 1,
        "undocumented_function": 0,
        "cycles": [],
        "dependencies": {},
        "fatal": 0,
        "by_msg": {
            "invalid-name": 1,
            "unused-import": 2,
            "inconsistent-return-statements": 1,
            "chained-comparison": 3,
            "missing-docstring": 9
        },
        "badname_function": 0,
        "error": 0,
        "badname_inlinevar": 0,
        "undocumented_module": 1,
        "badname_module": 0,
        "warning": 2,
        "function": 0,
        "badname_argument": 0,
        "statement": 55,
        "refactor": 4,
        "class": 1,
        "badname_const": 0,
        "badname_attr": 1,
        "convention": 10
    },
    "messages": [
        {
            "path": "pylint/pylint_generator.py",
            "line": 1,
            "type": "convention",
            "column": 0,
            "message": "Missing module docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": ""
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 7,
            "type": "convention",
            "column": 8,
            "message": "Attribute name \"BADGE_TEMPLATE\" doesn't conform to snake_case naming style",
            "module": "pylint.pylint_generator",
            "symbol": "invalid-name",
            "message-id": "C0103",
            "obj": "PylintGenerator.__init__"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 5,
            "type": "convention",
            "column": 0,
            "message": "Missing class docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": "PylintGenerator"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 41,
            "type": "convention",
            "column": 4,
            "message": "Missing method docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": "PylintGenerator.set_rating_and_colour"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 58,
            "type": "refactor",
            "column": 15,
            "message": "Simplify chained comparison between the operands",
            "module": "pylint.pylint_generator",
            "symbol": "chained-comparison",
            "message-id": "R1716",
            "obj": "PylintGenerator.set_rating_and_colour"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 60,
            "type": "refactor",
            "column": 17,
            "message": "Simplify chained comparison between the operands",
            "module": "pylint.pylint_generator",
            "symbol": "chained-comparison",
            "message-id": "R1716",
            "obj": "PylintGenerator.set_rating_and_colour"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 62,
            "type": "refactor",
            "column": 17,
            "message": "Simplify chained comparison between the operands",
            "module": "pylint.pylint_generator",
            "symbol": "chained-comparison",
            "message-id": "R1716",
            "obj": "PylintGenerator.set_rating_and_colour"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 41,
            "type": "refactor",
            "column": 4,
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "module": "pylint.pylint_generator",
            "symbol": "inconsistent-return-statements",
            "message-id": "R1710",
            "obj": "PylintGenerator.set_rating_and_colour"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 70,
            "type": "convention",
            "column": 4,
            "message": "Missing method docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": "PylintGenerator.get_svg"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 73,
            "type": "convention",
            "column": 4,
            "message": "Missing method docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": "PylintGenerator.set_pylint_messages"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 85,
            "type": "convention",
            "column": 4,
            "message": "Missing method docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": "PylintGenerator.get_convention"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 89,
            "type": "convention",
            "column": 4,
            "message": "Missing method docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": "PylintGenerator.get_refactor"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 93,
            "type": "convention",
            "column": 4,
            "message": "Missing method docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": "PylintGenerator.get_warning"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 97,
            "type": "convention",
            "column": 4,
            "message": "Missing method docstring",
            "module": "pylint.pylint_generator",
            "symbol": "missing-docstring",
            "message-id": "C0111",
            "obj": "PylintGenerator.get_error"
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 1,
            "type": "warning",
            "column": 0,
            "message": "Unused import os",
            "module": "pylint.pylint_generator",
            "symbol": "unused-import",
            "message-id": "W0611",
            "obj": ""
        },
        {
            "path": "pylint/pylint_generator.py",
            "line": 2,
            "type": "warning",
            "column": 0,
            "message": "Unused import re",
            "module": "pylint.pylint_generator",
            "symbol": "unused-import",
            "message-id": "W0611",
            "obj": ""
        }
    ]
}
